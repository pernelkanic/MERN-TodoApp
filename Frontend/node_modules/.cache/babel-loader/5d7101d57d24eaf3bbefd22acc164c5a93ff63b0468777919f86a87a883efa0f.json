{"ast":null,"code":"// import { useState } from 'react'\n// import { useAuthcontext } from './useAuthcontext'\n\n// export const useSignup = () => {\n//     const [error, setError] = useState(null)\n//     const [isLoading, setIsLoading] = useState(null)\n//     const { dispatch } = useAuthcontext()\n\n//     const signup = async (email, password) => {\n//       setIsLoading(true)\n//       setError(null)\n\n//       const response = await fetch('/api/user/signup', {\n//         method: 'POST',\n//         headers: {'Content-Type': 'application/json'},\n//         body: JSON.stringify({ email, password })\n//       })\n//       const json = await response.json()\n\n//       if (!response.ok) {\n//         setIsLoading(false)\n//         setError(json.error)\n//       }\n//       if (response.ok) {\n//         // save the user to local storage\n//         localStorage.setItem('user', JSON.stringify(json))\n\n//         // update the auth context\n//         dispatch({type: 'LOGIN', payload: json})\n\n//         // update loading state\n//         setIsLoading(false)\n//     }\n//   }\n\n//   return { signup, isLoading, error }\n// }","map":{"version":3,"names":[],"sources":["D:/venkat/STUDIES/Full Stack/TODO_2/MERN-TodoApp/Frontend/src/Components/useSignup.js"],"sourcesContent":["// import { useState } from 'react'\r\n// import { useAuthcontext } from './useAuthcontext'\r\n\r\n// export const useSignup = () => {\r\n//     const [error, setError] = useState(null)\r\n//     const [isLoading, setIsLoading] = useState(null)\r\n//     const { dispatch } = useAuthcontext()\r\n  \r\n//     const signup = async (email, password) => {\r\n//       setIsLoading(true)\r\n//       setError(null)\r\n  \r\n//       const response = await fetch('/api/user/signup', {\r\n//         method: 'POST',\r\n//         headers: {'Content-Type': 'application/json'},\r\n//         body: JSON.stringify({ email, password })\r\n//       })\r\n//       const json = await response.json()\r\n  \r\n//       if (!response.ok) {\r\n//         setIsLoading(false)\r\n//         setError(json.error)\r\n//       }\r\n//       if (response.ok) {\r\n//         // save the user to local storage\r\n//         localStorage.setItem('user', JSON.stringify(json))\r\n  \r\n//         // update the auth context\r\n//         dispatch({type: 'LOGIN', payload: json})\r\n  \r\n//         // update loading state\r\n//         setIsLoading(false)\r\n//     }\r\n//   }\r\n\r\n//   return { signup, isLoading, error }\r\n// }"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}