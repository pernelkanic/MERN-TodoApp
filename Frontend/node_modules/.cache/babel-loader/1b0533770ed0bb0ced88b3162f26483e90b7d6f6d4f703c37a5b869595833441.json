{"ast":null,"code":"var _jsxFileName = \"D:\\\\venkat\\\\STUDIES\\\\Full Stack\\\\TODO_2\\\\MERN-TodoApp\\\\Frontend\\\\src\\\\Components\\\\Filltodo.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filltodo = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDesc] = useState('');\n  const [error, setError] = useState(null);\n  const [emptyfield, setemptyfield] = useState([]);\n  const onSubmit = async e => {\n    e.preventDefault();\n    const todo = {\n      title,\n      description\n    };\n    const response = await fetch('/api/workouts', {\n      method: 'POST',\n      body: JSON.stringify(todo),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.err);\n      setemptyfield(json.emptyfield);\n    }\n    if (response.ok) {\n      setTitle('');\n      setDesc('');\n      setError(null);\n      setemptyfield([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a new Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Todo Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setTitle(e.target.value),\n        value: title,\n        className: emptyfield.includes('title') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Todo Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setDesc(e.target.value),\n        value: description,\n        className: emptyfield.includes('description') ? 'error' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Filltodo, \"20dRkirTOqgnIz0Pk1Pm3HxX3XY=\");\n_c = Filltodo;\nexport default Filltodo;\nvar _c;\n$RefreshReg$(_c, \"Filltodo\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Filltodo","_s","title","setTitle","description","setDesc","error","setError","emptyfield","setemptyfield","onSubmit","e","preventDefault","todo","response","fetch","method","body","JSON","stringify","headers","json","ok","err","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","className","includes","onClick","_c","$RefreshReg$"],"sources":["D:/venkat/STUDIES/Full Stack/TODO_2/MERN-TodoApp/Frontend/src/Components/Filltodo.js"],"sourcesContent":["import {useState} from 'react';\r\n\r\nconst Filltodo=()=>{\r\n    const[title , setTitle] = useState('');\r\n    const[description , setDesc] = useState('');\r\n    const[error , setError] = useState(null);\r\n    const[emptyfield , setemptyfield] = useState([]);\r\n\r\n    \r\n    const onSubmit=async(e)=>{\r\n        e.preventDefault()\r\n        const todo ={title,description};\r\n        const response =await fetch('/api/workouts',{\r\n            method:'POST',\r\n            body:JSON.stringify(todo),\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        });\r\n        const json = await response.json();\r\n        if(!response.ok){\r\n            setError(json.err);\r\n            setemptyfield(json.emptyfield)\r\n        }\r\n        if(response.ok){\r\n            setTitle('')\r\n            setDesc('')\r\n            setError(null);\r\n            setemptyfield([])\r\n           \r\n\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    return(\r\n        <div>\r\n            <form>\r\n                <h3>Add a new Todo</h3>\r\n                <label>Todo Title:</label>\r\n                <input\r\n                    type='text'\r\n                    onChange={(e)=>setTitle(e.target.value)}\r\n                    value={title}\r\n                    className={emptyfield.includes('title')?'error':''}\r\n\r\n                />\r\n                <label>Todo Description:</label>\r\n                <input\r\n                    type='text'\r\n                    onChange={(e)=>setDesc(e.target.value)}\r\n                    value={description}\r\n                    className={emptyfield.includes('description')?'error':''}\r\n                    \r\n                />\r\n                <button onClick={onSubmit}>Add Todo</button>\r\n                {error && <div className='error'>{error}</div>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Filltodo;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}