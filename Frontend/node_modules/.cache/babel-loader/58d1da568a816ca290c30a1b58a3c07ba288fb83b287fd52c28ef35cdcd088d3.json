{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthcontext } from './useAuthcontext';\nexport const useSignup = () => {\n  _s();\n  const [error, seterror] = useState(null);\n  const [isloading, setisloading] = useState(null);\n  const {\n    dispatch\n  } = useAuthcontext();\n  const signup = async (email, password, name) => {\n    setisloading(true);\n    seterror(null);\n    const sign = {\n      email,\n      password,\n      name\n    };\n    const response = await fetch('/api/user/signup', {\n      method: 'POST',\n      body: JSON.stringify(sign),\n      headers: {\n        'Content-Type': 'text/plain'\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setisloading(false);\n      seterror(json.error);\n    }\n    if (response.ok) {\n      localStorage.setItem('user', JSON.stringify(json));\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setisloading(false);\n    }\n  };\n  return {\n    signup,\n    isloading,\n    error\n  };\n};\n_s(useSignup, \"2f6J1CfBS88+sreT0j9oemolXC8=\", false, function () {\n  return [useAuthcontext];\n});","map":{"version":3,"names":["useState","useAuthcontext","useSignup","_s","error","seterror","isloading","setisloading","dispatch","signup","email","password","name","sign","response","fetch","method","body","JSON","stringify","headers","json","ok","localStorage","setItem","type","payload"],"sources":["D:/venkat/STUDIES/Full Stack/TODO_2/MERN-TodoApp/Frontend/src/Components/useSignup.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport {useAuthcontext} from './useAuthcontext';\r\nexport const useSignup =()=>{\r\n    const [error ,seterror] = useState(null)\r\n    const[isloading , setisloading] = useState(null);\r\n    const{dispatch} = useAuthcontext();\r\n\r\n    const signup=async(email,password,name)=>{\r\n            setisloading(true)\r\n            seterror(null);\r\n            const sign ={email,password,name};\r\n            const response =await fetch('/api/user/signup' ,{\r\n                method:'POST',\r\n                body: JSON.stringify(sign),\r\n                headers:{'Content-Type' : 'text/plain'}\r\n                \r\n\r\n            })\r\n            const json = await response.json();\r\n            if(!response.ok){\r\n                setisloading(false);\r\n                seterror(json.error);\r\n            }\r\n            if(response.ok){\r\n                localStorage.setItem('user', JSON.stringify(json));\r\n                dispatch({type:'LOGIN' , payload : json})\r\n                setisloading(false);\r\n\r\n            }\r\n\r\n    }\r\n    return{signup ,isloading,error}\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAAQC,cAAc,QAAO,kBAAkB;AAC/C,OAAO,MAAMC,SAAS,GAAEA,CAAA,KAAI;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAK,CAACM,SAAS,EAAGC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAK;IAACQ;EAAQ,CAAC,GAAGP,cAAc,EAAE;EAElC,MAAMQ,MAAM,GAAC,MAAAA,CAAMC,KAAK,EAACC,QAAQ,EAACC,IAAI,KAAG;IACjCL,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IACd,MAAMQ,IAAI,GAAE;MAACH,KAAK;MAACC,QAAQ;MAACC;IAAI,CAAC;IACjC,MAAME,QAAQ,GAAE,MAAMC,KAAK,CAAC,kBAAkB,EAAE;MAC5CC,MAAM,EAAC,MAAM;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;MAC1BO,OAAO,EAAC;QAAC,cAAc,EAAG;MAAY;IAG1C,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,EAAE;IAClC,IAAG,CAACP,QAAQ,CAACQ,EAAE,EAAC;MACZf,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACgB,IAAI,CAACjB,KAAK,CAAC;IACxB;IACA,IAAGU,QAAQ,CAACQ,EAAE,EAAC;MACXC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACC,SAAS,CAACE,IAAI,CAAC,CAAC;MAClDb,QAAQ,CAAC;QAACiB,IAAI,EAAC,OAAO;QAAGC,OAAO,EAAGL;MAAI,CAAC,CAAC;MACzCd,YAAY,CAAC,KAAK,CAAC;IAEvB;EAER,CAAC;EACD,OAAM;IAACE,MAAM;IAAEH,SAAS;IAACF;EAAK,CAAC;AACnC,CAAC;AAAAD,EAAA,CA9BYD,SAAS;EAAA,QAGAD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}