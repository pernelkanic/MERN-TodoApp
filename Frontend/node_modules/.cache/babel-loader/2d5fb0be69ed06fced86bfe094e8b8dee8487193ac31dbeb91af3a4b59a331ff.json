{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthcontext } from './useAuthcontext';\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthcontext();\n  const signup = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('http://localhost:4000/api/user/signup');\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n\n      // update loading state\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"EN/Om2AJ5IRAdcNqqCOrOGqUEJg=\", false, function () {\n  return [useAuthcontext];\n});","map":{"version":3,"names":["useState","useAuthcontext","useSignup","_s","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","response","fetch","json","ok","localStorage","setItem","JSON","stringify","type","payload"],"sources":["D:/venkat/STUDIES/Full Stack/TODO_2/MERN-TodoApp/Frontend/src/Components/useSignup.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { useAuthcontext } from './useAuthcontext'\r\n\r\nexport const useSignup = () => {\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(null)\r\n    const { dispatch } = useAuthcontext()\r\n  \r\n    const signup = async (email, password) => {\r\n      setIsLoading(true)\r\n      setError(null)\r\n  \r\n      const response = await fetch('http://localhost:4000/api/user/signup',\r\n       \r\n        \r\n      )\r\n      const json = await response.json()\r\n  \r\n      if (!response.ok) {\r\n        setIsLoading(false)\r\n        setError(json.error)\r\n      }\r\n      if (response.ok) {\r\n        // save the user to local storage\r\n        localStorage.setItem('user', JSON.stringify(json))\r\n  \r\n        // update the auth context\r\n        dispatch({type: 'LOGIN', payload: json})\r\n  \r\n        // update loading state\r\n        setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return { signup, isLoading, error }\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,EAAE;EAErC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACxCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAGnE;IACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,EAAE;IAElC,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MAChBR,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC;IACtB;IACA,IAAIQ,QAAQ,CAACG,EAAE,EAAE;MACf;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC;;MAElD;MACAN,QAAQ,CAAC;QAACY,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEP;MAAI,CAAC,CAAC;;MAExC;MACAP,YAAY,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,OAAO;IAAEE,MAAM;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACrC,CAAC;AAAAD,EAAA,CAhCYD,SAAS;EAAA,QAGGD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}